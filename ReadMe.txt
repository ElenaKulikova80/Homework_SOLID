Домашнее задание
Демонстрация SOLID принципов

Цель:
Практическое применение SOLID принципов.


Описание/Пошаговая инструкция выполнения домашнего задания:
На примере реализации игры «Угадай число» продемонстрировать практическое применение SOLID принципов.
Программа рандомно генерирует число, пользователь должен угадать это число. При каждом вводе числа программа пишет больше или меньше отгадываемого. Кол-во попыток отгадывания и диапазон чисел должен задаваться из настроек.
В отчёте написать, что именно сделано по каждому принципу.
Приложить ссылку на проект и написать, сколько времени ушло на выполнение задачи.


ОТЧЕТ
SOLID:

S - Single responsibility principle:
Классы CheckingValueInput, NumberGenerator, Messager, Settings предназначены для выполнения
одной функции

O - Open/close principle:
Класс NumberGenerator закрывает доступ к собственной модификаци, но открывает
возможность для доступа к "задуманному числу" (GetHiddenNumber)
Реализовано в классе CheckingValueInputLickov.

L - Liskov substitution principle:
Класс CheckingValueInputLickov расширяет функционал класса-родителя CheckingValue.

I - Interface segregation principle:
Все интерфейсы сожержат минимальный набор требований для реализации, который необходим для функционирования классов-наследников.

D - Dependency inversion principle
Во всех классах, где считала необходимым, использовала зависимость от интерфейсов. Это позволяет зависеть от абстракций.
